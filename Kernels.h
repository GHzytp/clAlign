static char* sMultiCorrelation =
"__kernel void clMultiCorrelation(__global const float2* fft1, __global const float2* fft2, __global float2* PCF,__global float2* XCF, int width, int height) \n"
"{		\n"
"	//Get the work items ID \n"
"	int xid = get_global_id(0);	\n"
"	int yid = get_global_id(1); \n"
"	if(xid<width&&yid<height) \n"
"	{	\n"
"		int Index = xid + yid*width; \n"
"		float c1r = fft1[Index].x; \n"
"		float c1i = fft1[Index].y; \n"
"		float c2r = fft2[Index].x; \n"
"		float c2i = fft2[Index].y; \n"
//"		PCF[Index].x = (c1r*c2r + c1i*c2i)*rsqrt((c1r*c1r*c2r*c2r + c1i*c1i*c2i*c2i + c1r*c1r*c2i*c2i + c2r*c2r*c1i*c1i)); \n"
//"		PCF[Index].y = (c2i*c1r - c1i*c2r)*rsqrt((c1r*c1r*c2r*c2r + c1i*c1i*c2i*c2i + c1r*c1r*c2i*c2i + c2r*c2r*c1i*c1i)); \n"
"		XCF[Index].x = (c1r*c2r + c1i*c2i); \n"
"		XCF[Index].y = (c2i*c1r - c1i*c2r); \n"
"	}	\n"
"}		\n"
;

static char* sfftShift =
"__kernel void clfftShift(__global const float2* Input, __global float2* Output, int width, int height) \n"
"{		\n"
"	//Get the work items ID \n"
"	int xid = get_global_id(0);	\n"
"	int yid = get_global_id(1); \n"
"	if(xid < width && yid < height) \n"
"	{	\n"
"		int Index = xid + yid*width; \n"
"		int Yshift = width*height/2; \n"
"		int Xshift = width/2; \n"
"		int Xmid = width/2; \n"
"		int Ymid = height/2; \n"
"		if( xid < Xmid && yid < Ymid ) \n"
"		{ \n"
"			Output[Index+Yshift+Xshift].x = Input[Index].x; \n"
"			Output[Index+Yshift+Xshift].y = Input[Index].y; \n"
"		} \n"
"		else if( xid >= Xmid && yid < Ymid ) \n"
"		{ \n"
"			Output[Index+Yshift-Xshift].x = Input[Index].x; \n"
"			Output[Index+Yshift-Xshift].y = Input[Index].y; \n"
"		} \n"
"		else if( xid < Xmid && yid >= Ymid ) \n"
"		{ \n"
"			Output[Index-Yshift+Xshift].x = Input[Index].x; \n"
"			Output[Index-Yshift+Xshift].y = Input[Index].y; \n"
"		} \n"
"		else if( xid >= Xmid && yid >= Ymid ) \n"
"		{ \n"
"			Output[Index-Yshift-Xshift].x = Input[Index].x; \n"
"			Output[Index-Yshift-Xshift].y = Input[Index].y; \n"
"		} \n"
"	}	\n"
"}	\n"
;

static char* sShiftImage =
"__kernel void clShiftImage(__global float2* fft, float shiftX, float shiftY, int width, int height) \n"
"{		\n"
"	//Get the work items ID \n"
"	int xid = get_global_id(0);	\n"
"	int yid = get_global_id(1); \n"
"	if(xid<width&&yid<height) \n"
"	{	\n"
"		int Index = xid + yid*width; \n"
"		int xF = xid - width / 2; \n"
"		int yF = height / 2 - yid - 1; \n"
"		float c = cos(2*M_PI * (shiftX*xF / width + shiftY*yF / height) ); \n"
"		float s = -sin(2*M_PI * (shiftX*xF / width + shiftY*yF / height) ); \n"
"		fft[Index].x = fft[Index].x * c - fft[Index].y * s; \n"
"		fft[Index].y = fft[Index].y * c + fft[Index].x * s; \n"
"	}	\n"
"}		\n"
;